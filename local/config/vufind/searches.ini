[Parent_Config]
path					= config/vufind/searches.ini
override_full_sections	= Sorting,RSS,Basic_Searches,Advanced_Searches,Autocomplete_Types,Autocomplete

[General]
limit_options	= 5,10,20,40,60,80,100
default_limit   = 20
multiValuedFRBRField = false
retain_filters_by_default = false
result_limit = 20000

[Sorting]
relevance		    = sort.relevance
publishDateSort desc= sort.publishDateSort.desc
publishDateSort asc	= sort.publishDateSort.asc
author_sort asc		= sort.Author.asc
author_sort desc    = sort.Author.desc
title_sort asc	    = sort.title.asc
title_sort desc	    = sort.title.desc

[RSS]
sort = "publishDateSort desc"

[Basic_Searches]
AllFields           = "All Fields"

[Advanced_Searches]
ctrlnum             = adv_search_ctrlnum
AllFields           = adv_search_all
Author              = adv_search_author
Title               = adv_search_title
Subject             = adv_search_subject
JournalTitle        = adv_search_journaltitle
Series              = adv_search_series
ISN                 = adv_search_isn
CallNumber          = adv_search_callnumber
;publisher           = adv_search_publisher
;year                = adv_search_year

; The following two sections control the behavior of the autocomplete drop-downs
; associated with search boxes.  The [Autocomplete] section contains global default
; settings, while the [Autocomplete_Types] section allows you to associate different
; autocomplete handlers with different search handlers.
;
; The available autocomplete handlers are:
; see /config/vufind/searches.ini
;
; Customized swissbib autosuggesters :
;
; SolrFacetBasedSuggester:[Search Handler]:[Facet to display]:[true to only
;       display facet values which contains the first query term, false to display
;       all facet values]:[number of suggestions to retrieve]
;       Perform a wilcarded search against [Search Handler] and display the first
;       [number of suggestions to retrieve]
;       facet values from [Facet to display] which contains the first word of the
;       user query (if true)
; SolrCombineFields:[Search Handler]:[fields to combine with a / in the middle]
;       Perform a wilcarded search against [Search Handler] and display the first
;       results that match the search
;       the display will be like Scrum / Guillaume Bodet (where the first field
;       is displayed before the second field with a / in the middle)
;
[Autocomplete]
enabled = false
default_handler = Solr:Autosuggest

; In this section, set the key equal to a search handler from searchspecs.yaml and
; the value equal to an autocomplete handler in order to customize autocompletion
; behavior when that search type is selected.

[Autocomplete_Types]
;this means : use the suggester named SOLR (\Swissbib\Vufind\Autocomplete\Solr)
; against TitleSuggest as defined in searchspecs, display the content of the
;title_short field
;AutocompleteTitle = "Solr:TitleSuggest:title_short"
AutocompleteAuthor = "SolrFacetBasedSuggester:Author:navAuthor_full:false:3"
AutocompleteAllFields = "SolrCombineFields:AllFieldsAutosuggest:title_short,author_first"


; this configures the outermedia developed suggestion box
[AutoSuggest]
enabled = true

;defines the query used for the suggestions for each section
;based on the parameters of each section
templates.search.autosuggest = "/AJAX/JSON?q={query}&method=getACSuggestions&searcher={searcher}&type={autocomplete_type}"
;defines what search is done when an autosuggest suggestion is clicked
templates.search.record      = "/Search/Results?lookfor={query}&type={type}"

;number of results to be displayed for this section
sections.0.limit    = 3
;label of the section (from languages ini files)
;the label need to be added to layout.phtml to be available
;in js code
sections.0.label    = autosuggest.section.label.titles
;search backend
sections.0.searcher = Solr
;defines which Autocomplete_Type (as defined in the [Autocomplete_Types] of
;searches.ini is used for this section
sections.0.autocomplete_type = AutocompleteAllFields
;after clicking on a suggestion, define which Search Handler from searchspecs.yaml
;will be used
sections.0.type = AllFields
;possible values : label|value
;defines if we use the label or the value of the suggestion
;for the templates.search.record link
sections.0.field    = label

sections.1.limit    = 3
sections.1.label    = autosuggest.section.label.authors
sections.1.searcher = Solr
sections.1.type     = Author
sections.1.autocomplete_type = AutocompleteAuthor
sections.1.field    = label

[RecordReferences]
;todo: was ist mit VIAF und GND? Stellen wir die auch auf HTTPS
record.references.gnd.label = GND
record.references.gnd.pattern = "/^https{0,1}:\\/\\/d-nb.info\\/gnd\\/.*$/"
record.references.dbpedia.label = DBPedia
record.references.dbpedia.pattern = "/^https:\\/\\/dbpedia.org\\/resource\\/.*$/"
record.references.viaf.label = VIAF
record.references.viaf.pattern = "/^https{0,1}:\\/\\/viaf.org\\/viaf\\/.*$/"
record.references.wikidata.label = Wikidata
record.references.wikidata.pattern = "/^https{0,1}:\\/\\/www.wikidata.org\\/entity\\/Q.*$/"
record.references.hls.label = Historisches Lexikon der Schweiz
record.references.hls.pattern = "/^https{0,1}:\\/\\/www.hls-dhs-dss.ch\\/.*$/"

[MoreLikeThis]
useMoreLikeThisHandler = true
params = "fl=title,title_short,author,topic,publishDate,classif_rvk,classif_udc,classif_ddc qf=title,title_short mintf=1 mindf=1";
;count = 5
