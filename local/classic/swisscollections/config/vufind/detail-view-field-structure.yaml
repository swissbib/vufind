#'@parent_yaml': "local/config/vufind/detail-view-field-structure.yaml"

# "name" matches "Gruppierungsname / Oberbegriff"
# "labelKey" matches "Bezeichnung"
# "entries" matches "Unterbezeichnung"

structure:
  "Basisinformationen":
    fields:
      "Titel":
        type: compound
        formatter:
          name: line
          entries:
            - name: "Titel"
              # formatter: ...
            - name: "Untertitel"
            - name: "Autor"
      "Signatur":
        type: compound
        formatter:
          name: inline
          separator: "; " # for inline formatter only
          repeated: true
          entries:
            - name: "institution-code"
            - name: "standort code"
            - name: "Signatur1"
            - name: "Signatur2"
  "Sucheinstiege":
    groups:
      "Person":
        formatter:
          name: "sucheinstiege-person" # handle all fields "Person" with this formatter
          roleOrder: # all other roles are printed at the end
            - "cmp"
            - "wpr"
            - "edt"
          roleMarcSubfields: # specific for "sucheinstiege-person"
            - "4"
            - "4rcp"
          hiddenMarcSubfields: # specific for "sucheinstiege-person"
            - "4"
            - "4rcp"
            - "e"
    fields:
      "Person":
        type: compound # expected by "sucheinstiege-person" formatter, because "entries" are needed too
        formatter:
          name: inline
          separator: " / "
          entries:
            - name: "Person-a"
            - name: "Person-t"
            - name: "Person-k"
            - name: "Person-d"
            - name: "Person-0"
      "Ort":
  "Thema":
    fields:
      "Formschlagwort":
      "Alternativtitel":
      "Sachbegriff":
        formatter:
          repeated: true
  "Inhalt und innere Ordnung":
    fields:
      "Inhalt-505":
        type: sequences
        formatter:
          # without "entries:" the order of the applied sequence is used (see "sequences:" below)
          entries:
            - name: "Inhalt3-r"
            - name: "Inhalt3-t"
            - name: "Inhalt3-g"
            - name: "Inhalt3-a"
        # note that "sequences:" entries are sorted to guarantee the "longest" match
        # use "entries:" (see above) for another order of sequences
        sequences: # from Swissbib/RecordDriver/SolrMarc.php getTableOfContent()
          - [ "g", "t", "r" ]
          - [ "g", "t" ]
          - [ "g", "r" ]
          - [ "t", "r" ]
          - [ "t" ]
          - [ "r" ]
          - [ "a" ]
