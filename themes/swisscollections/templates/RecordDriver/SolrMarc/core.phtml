<!-- <?php use SwissCollections\Formatter\FieldFormatterRegistry;
use SwissCollections\RecordDriver\FieldRenderContext;
use SwissCollections\RenderConfig\AbstractRenderConfigEntry;
use SwissCollections\RenderConfig\RenderGroupConfig;
use SwissCollections\templates\RecordDriver\SolrMarc\InlineFormatter;
use SwissCollections\templates\RecordDriver\SolrMarc\LineFormatter;

echo APPLICATION_ENV; ?>-->
<?php
/** @var SwissCollections\RecordDriver\SolrMarc $record */
$record = $this->driver;
/** @var Swissbib\View\Helper\Record $viewRecord */
$viewRecord = $this->record($record);
/**
 * @var RenderGroupConfig[]
 */
$renderConfig = $record->getRenderConfig();

$id = $record->getUniqueId();
$shortTitle = $record->getShortTitle();
$titleStatement = $record->getTitleStatement(true);
$subtitle = $viewRecord->getSubtitle($titleStatement);
$responsible = $viewRecord->getResponsible($titleStatement, $record);
$publications = $record->getPublicationDetails();
$physicalDescriptions = $record->getPhysicalDescriptions(false);
$edition = $record->getEdition();
$cartMathData = $record->getCartMathData();
$formats = $viewRecord->getFormatList();
$hierarchicalLevel = $record->getHierachicalLevel();
$hostItems = $record->getHostItemEntry();
$journalTitle = $record->getContainerTitle();
$ref = $record->getContainerReference();
$highlightedFulltext = $record->getHighlightedFulltext();

$showFRBR = $this->configAccess()->Site->displayFrbr;
$groupID = $this->driver->getGroup(true);

$urls = $viewRecord->getExtendedLinkDetails();

$nl = null;
if ($searchClassId != "Summon") {
    try {
        $nl = $this->nationalLicences()->getUrl($record);
    } catch (\Exception $e) {
        //this is the case for swissbib orange and jusbib
        $nl = null;
    }
}
if ($nl) {
    $linkNL = ['url' => $nl['url'], 'desc' => "Get it Online (National Licence)"];
    array_push($urls, $linkNL);
}
$link360 = $viewRecord->getLink360();
$linkSFX = $viewRecord->getLinkSFX();

$this->render('RecordDriver/SolrMarc/InlineFormatter');
$this->render('RecordDriver/SolrMarc/LineFormatter');

$fieldFormatterRegistry = new FieldFormatterRegistry();
$fieldFormatterRegistry->register(new InlineFormatter($this));
$fieldFormatterRegistry->register(new LineFormatter($this));
?>
<div class="" vocab="http://schema.org/" resource="#record"
     typeof="<?= $this->driver->getSchemaOrgFormats() ?> Product">

    <div style="border-top: 1px solid #bbbbbb; margin-top: 1rem; margin-bottom: 1rem;"></div>
    <?php
    if ($renderConfig) {
        /**
         * @var RenderGroupConfig $renderGroupConfig
         */
        foreach ($renderConfig as $renderGroupConfig) {
            if (!$record->isEmptyGroup($renderGroupConfig)) {
                $groupName = $renderGroupConfig->getName();
                $groupAnchor = str_replace(' ', '_', $groupName);
                echo "<a name='$groupAnchor'>";
                echo "<h2>" . $this->translate('page.detail.group.label.' . $groupName) . "</h2>";
                echo "</a>";
                /**
                 * @var AbstractRenderConfigEntry $renderElem
                 */
                foreach ($renderGroupConfig->entries() as $renderElem) {
                    if (!$record->isEmptyField($renderElem->marcIndex, $renderElem)) {
                        echo "\n<div class='row'>\n";
                        echo "\t<div class='field-label field-label-" . $renderElem->labelKey . " col-md-3'>\n";
                        echo $this->translate('page.detail.field.label.' . $renderElem->labelKey);
                        echo "\t</div>\n";
                        echo "\t<div class='col-md-9'>\n";

                        // sets list element tags for <ul class='field-values'> ...
                        $renderElem->setListHtml("\t\t<li class='field-values-element'>\n", "\t\t</li>\n");

                        $fields = $record->getMarcFields($renderElem->marcIndex);
                        if (!empty($fields)) {
                            if ($renderElem->repeated) {
                                echo "\t\t<ul class='field-values'>\n";
                            }
                            $context = new FieldRenderContext($fieldFormatterRegistry, $record);
                            foreach ($fields as $field) {
                                $renderElem->render($field, $context);
                            }
                            if ($renderElem->repeated) {
                                echo "\t\t</ul>\n";
                            }
                        }

                        echo "\t</div>\n";
                        echo "</div>\n";
                    }
                }
                echo "<div style=\"border-top: 1px solid #bbbbbb; margin-top: 1rem; margin-bottom: 1rem;\"></div>";
            }
        }
    }
    ?>
</div>